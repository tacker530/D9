### 用語定義

1. **ポータル**:
   - 特定の緯度、経度、名称を持つ。
   - 郵便局、石碑、壁画、建物などの場所に設定される。
   - 同じ座標（緯度、経度）には一つのポータルしか設定できない。

2. **リンク**:
   - ポータルとポータルを直線でつないだ線。
   - 長さの制限はない。
   - 他のリンクと交差することはできない。
   - ひとつのポータルから複数のリンクを作ることが可能。

3. **CF (コントロールフィールド)**:
   - リンクで三角形を作成した場合、その領域のこと。
   - より大きいCFの中に、より小さいCFを作成することが可能。
   - すでに作成されているCFのリンクを共有してもかまわない。

4. **多重CF**:
   - CFとCFが重なっている状態。
   - 例えば、ポータルA、B、CがCFを作成しているとき、ポータルDがこのCFの内側にある場合、新しいリンクAD、BD、CDを作成可能。
   - この状態では、CFはABC以外に、ADB、BDC、CDAの3つが追加される。
   - より大きい領域を3つの小さいCFに分割して構成しているため、「多重CF」と呼ぶ。

5. **全多重**:
   - 再帰的に分割されたすべてのCFの内側を3つのCFに分割する操作を「全多重を作成する」と呼ぶ。
   - 例えば、内側に1点のポータルがある場合の全多重は「全2重CF」と呼び、さらに分割したものは「全3重CF」と呼ぶ。
   - 一段階の全多重を増やすごとに全4重、全5重と呼ぶ。


### タスク: 全多重CFの検索プログラムの作成

CSVファイルからポータルの位置情報を取得し、そのデータを元に全多重CFを検索するプログラムをRubyで作成します。

#### CSVデータの形式

CSVファイルの各行には以下の情報が含まれます：
- 緯度
- 経度
- ポータル名

#### 必要な機能

1. **CSVファイルの読み込み**:
   - `緯度、経度、ポータル名`を読み取り、ポータルオブジェクトを生成する。

2. **リンクの交差判定**:
   - 二つのリンク（直線）が交差するかどうかを判定する。

3. **三角形内外判定**:
   - 与えられたポータルが特定の三角形の内部にあるかどうかを判定する。

4. **全多重CFの構築**:
   - すべてのポータルの組み合わせを探索し、ポータル間のリンクとCFを再帰的に生成して全多重CFを構築する。


### プログラムの流れ

1. **ポータルクラスの定義**:
   - ポータルの緯度、経度、名前を管理。

2. **CSVファイルの読み込み関数**:
   - ポータルデータを読み込む。

3. **直線の交差判定関数**:
   - 二本のリンクが交差するかどうかを判定する計算幾何学のアルゴリズムを使用。

4. **三角形内外判定関数**:
   - 面積を利用して、点が三角形の内部にあるかどうかを判定する。

5. **全多重CFの探索関数**:
   - 与えられたポータルの組み合わせから三角形を作成し、その内側のポータルを探索して再帰的に多重CFを構築する。

このプロンプトでは、上記の機能を持つプログラムをRubyで実装することが求められています。